
API gateway -> Step Functions -> Lambda functons -> Dynamo DB

How to run AWS Step Functions locally with Docker | SAM Series #4
https://www.youtube.com/watch?v=75cCUUEum1c&t=24s

---------------------------------------------------------------------------------------

Understanding of SAM templates:
https://www.youtube.com/watch?v=JCqpS2RuayM
https://docs.aws.amazon.com/step-functions/latest/dg/tutorial-state-machine-using-sam.html
https://docs.aws.amazon.com/step-functions/latest/dg/sfn-local-docker.html

---------------------------------------------------------------------------------------
***********Build and deploy Step Functions: (latest)*********
FooBar Channel
https://www.youtube.com/watch?v=YvxB9WRc2o8&t=9s

---------------------------------------------------------------------------------------

*********** Create a Step Functions State Machine Using AWS SAM***************
https://github.com/rwibawa/sam-stock-trader

---------------------------------------------------------------------------------------
*********** New Synchronous Express Workflows for AWS Step Functions***************
https://aws.amazon.com/blogs/compute/new-synchronous-express-workflows-for-aws-step-functions/

git clone https://github.com/aws-samples/contact-form-processing-with-synchronous-express-workflows.git

---------------------------------------------------------------------------------------

==================================================

1)

Start local lambda endpoint:

sam local start-lambda --host 192.168.0.108 --port 3001
or
sam local start-lambda

PS C:\Prabhu\AWS_SAM\sam-demo\javahome-app> sam local start-lambda --host 192.168.0.108 --port 3001
Starting the Local Lambda Service. You can now invoke your Lambda Functions defined in your template through the endpoint.
2022-06-20 11:33:27  * Running on http://127.0.0.1:3001/ (Press CTRL+C to quit)

--------------------------------------------------------
========================================
Open another cmd prompt:

now start step function locally. Start the docker in cmd prompt in the project directory.

Open localsettings.txt file and upate the wifi Router IP address:  192.168.0.108 of that time

In command prompt:(Start the existing docker)


C:\Prabhu\AWS_SAM\javahome-app>docker run -p 8083:8083 --env-file localSettings.txt amazon/aws-stepfunctions-local


Step Functions Local
Version: 1.10.1
Build: 2022-04-22
2022-06-30 04:39:52.882: Configure [AWS_ACCOUNT_ID] to [150097413076]
2022-06-30 04:39:52.882: Configure [AWS_DEFAULT_REGION] to [ap-south-1]
2022-06-30 04:39:52.883: Configure [LAMBDA_ENDPOINT] to [http://192.168.0.108:3001]
2022-06-30 04:39:52.897: Loaded credentials from environment
2022-06-30 04:39:53.214: Starting server on port 8083 with account 150097413076, region ap-south-1
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.



--------------------------------------------
AWS_ACCESS_KEY=AKIASF4UAYPKAKEAY2B6
AWS_SECRET_ACCESS_KEY=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

----------------------------------------
Power Shell ( To run the project local testing)

1)

PS C:\Prabhu\AWS_SAM\sam-demo\javahome-app> sam local invoke
Invoking app.lambda_handler (python3.9)
Skip pulling image and use local one: public.ecr.aws/sam/emulation-python3.9:rapid-1.50.0-x86_64.

Mounting C:\Prabhu\AWS_SAM\sam-demo\javahome-app\.aws-sam\build\HelloFromLocalStepFunction as /var/task:ro,delegated inside runtime container
START RequestId: 8e3b9b90-66c9-4e14-bf52-e6a3a2c57a13 Version: $LATEST
e
END RequestId: 8e3b9b90-66c9-4e14-bf52-e6a3a2c57a13
REPORT RequestId: 8e3b9b90-66c9-4e14-bf52-e6a3a2c57a13  Init Duration: 0.59 ms  Duration: 5474.98 ms    Billed Duration: 5475 ms     Memory Size: 128 MB     Max Memory Used: 128 MB
{"statusCode": 200, "body": "{\"message\": \"hello world Prabhu\", \"location\": \"117.248.44.120\"}"}

sam sync --stack-name test --watch


2)

PS C:\Prabhu\AWS_SAM\sam-demo\javahome-app> aws stepfunctions create-state-machine --endpoint http://192.168.0.109:8083 --definition file://statemachine/stateMachine.asl.json --name "HelloFromLocalStepFunctions" --role-arn "arn:aws:iam::150097413076:role/DummyRole"  

Output:  
{
    "stateMachineArn": "arn:aws:states:ap-south-1:150097413076:stateMachine:HelloFromLocalStepFunctions",
    "creationDate": "2022-06-21T10:25:55.773000+05:30"
}


3) run the step function locally

PS C:\Prabhu\AWS_SAM\sam-demo\javahome-app> aws stepfunctions --endpoint http://192.168.0.108:8083 start-execution --state-machine arn:aws:states:ap-south-1:150097413076:stateMachine:HelloFromLocalStepFunctions --name test1

Output:
{
    "executionArn": "arn:aws:states:ap-south-1:150097413076:execution:HelloFromLocalStepFunctions:test1",
    "startDate": "2022-06-21T11:49:38.034000+05:30"
}


3) Verify using describe execution:

C:\Prabhu\AWS_SAM\javahome-app>aws stepfunctions --endpoint http://192.168.0.108:8083 describe-execution --execution-arn arn:aws:states:ap-south-1:150097413076:execution:HelloFromLocalStepFunctions:test3

Output:::::
{
    "executionArn": "arn:aws:states:ap-south-1:150097413076:execution:HelloFromLocalStepFunctions:test1",
    "stateMachineArn": "arn:aws:states:ap-south-1:150097413076:stateMachine:HelloFromLocalStepFunctions",
    "name": "test1",
    "status": "SUCCEEDED",
    "startDate": "2022-06-30T10:11:32.727000+05:30",
    "stopDate": "2022-06-30T10:11:36.491000+05:30",
    "input": "{}",
    "inputDetails": {
        "included": true
    },
    "output": "{\"statusCode\": 200, \"body\": \"{\\\"message\\\": \\\"hello world Prabhu\\\", \\\"location\\\": \\\"103.28.246.125\\\"}\"}",
    "outputDetails": {
        "included": true
    }
}

======================================================
